version: '3.8'

x-DbLoggin:
  environment: &postgres-login # the POSTGRES user master password
    POSTGRES_PASSWORD: '${POSTGRES_MASTER_PASSWORD}'

    USER_USERNAME: '${POSTGRES_USER_USERNAME}'
    USER_DB_NAME: '${POSTGRES_USER_DB}'
    USER_PASSWORD: '${POSTGRES_USER_PASSWORD}'
    POSTGRES_IP:  '${POSTGRES_IP}'
    SQLURL: 'jdbc:postgresql://${POSTGRES_IP}:5432/${POSTGRES_USER_DB}'
  networks: &postgres-ip
    ipv4_address: '${POSTGRES_IP}'

services:
  postgres_db:
    container_name: recipe_heaven_db
    image: postgres

    environment:
      <<: *postgres-login
      PGDATA: '/var/lib/postgresql/data/pgdata'

    networks:
      local_network: *postgres-ip

    volumes:
      - type: volume
        source: postgres_db
        target: /var/lib/postgresql/data

      - type: bind
        source: ./docker_files/db_init
        target: /docker-entrypoint-initdb.d

    restart: unless-stopped
    # MAILING APPLICATION


  mail:
    container_name: recipe_heaven_mail
    restart: unless-stopped
    image: namshi/smtp
    networks:
      local_network:
      frontend:


  server:
    container_name: recipe_heaven_server
    build:
      context: ./
      dockerfile: Dockerfile

    image: no.twct.recipeheaven/appserver

    environment:
      <<: *postgres-login
      PAYARA_ARGS: "--debug"



    volumes:
      - type: volume
        source: app_images
        target: /images

    networks:
      local_network:
        ipv4_address: '${APPSERVER_IP}'
      frontend:

    ports:
      - '9876:8080'

    restart: unless-stopped


networks:
  local_network:
    external: false
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/8

  frontend:

volumes:
  postgres_db:

  app_images:

  nginx_data:
